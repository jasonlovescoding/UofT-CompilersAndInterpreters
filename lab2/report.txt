/**********************************************************************
 *  Name           Student Number
 *  Yi Qi Cao      999865294
 *  Qianhao Zhang  1004654377
 **********************************************************************/
We target this phase of lab as to fill in the production rules without ambiguity.
The first and most prominent ambiguity from the original lab spec lies in <declarations> and <declaration>. 
The empty production rule for <declaration> is removed to avoid the infinite loop going from producing an empty <declarations> and an empty <declaration> over and over again.

Then the ambiguity from expression with operators is handled by the direct embedding of reordered rules <expression op expression> into the production rule of expression,
instead of using an intermediate rule for binary_ops. An interesting trick is the use of %prec UMINUS as TA suggested. 

Another thing to notice is that in the original lab starter there is no support for comma ',' as it should for the language. We added that by modifying scanner.l

For testing we wrote functions.frag, if_else.frag, operators.frag, so as to test the parser is working correctly in terms of precedence, associaticity for function calls, operations and if branches. 
We added trace of every production rule. With that information we verified our output to be correct. 
